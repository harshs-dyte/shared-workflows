name: Check for lint/build errors

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        default: "16"
        type: "string"
      submodules:
        required: false
        default: "recursive"
        type: "string"
      upload-debug-logs:
        required: false
        default: false
        type: "boolean"
    secrets:
      npm_token:
        required: true
      aws_oidc_sa:
        required: true
      semantic_release_pat:
        required: true
      
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: ${{ inputs.submodules }}
        token: ${{ secrets.semantic_release_pat }}
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.aws_oidc_sa }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: true

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: npm install, lint
      shell: bash
      run: |
        npm install
        npm run lint
      env:
        NPM_TOKEN: "${{ secrets.npm_token }}"

    - name: Upload debug logs
      if: ${{ inputs.upload-debug-logs == 'true' && failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: debug-logs
        path: /home/runner/.npm/_logs

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: ${{ inputs.submodules }}
        token: ${{ secrets.semantic_release_pat }}
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.aws_oidc_sa }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: true

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install skaffold
      shell: bash
      run: curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && sudo install skaffold /usr/local/bin/

    - name: Build image
      shell: bash
      run: skaffold build --profile=production --push=false
      env:
        NPM_TOKEN: ${{ secrets.npm_token }}
